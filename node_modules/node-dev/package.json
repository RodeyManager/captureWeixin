{
  "name": "node-dev",
  "version": "2.3.0",
  "description": "Restarts your app when files are modified",
  "keywords": [
    "restart",
    "reload",
    "supervisor",
    "monitor",
    "watch"
  ],
  "author": {
    "name": "Felix Gnass"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/fgnass/node-dev.git"
  },
  "license": "MIT",
  "bin": {
    "node-dev": "./bin/node-dev"
  },
  "main": "./lib",
  "preferGlobal": true,
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "growl": "~1.7.0",
    "dateformat": "~1.0.4-1.2.3",
    "filewatcher": "~1.1.1"
  },
  "devDependencies": {
    "mocha": "~1.4.1",
    "expect.js": "~0.2.0",
    "coffee-script": "~1.7.1"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/fgnass/node-dev.png)](http://travis-ci.org/fgnass/node-dev)\n\n### node-dev (1)\n\nNode-dev is a development tool for [Node.js](http://nodejs.org) that\nautomatically restarts the node process when a file is modified.\n\nIn contrast to tools like\n[supervisor](https://github.com/isaacs/node-supervisor) or\n[nodemon](https://github.com/remy/nodemon) it doesn't scan the filesystem for\nfiles to be watched. Instead it hooks into Node's `require()` function to watch\nonly the files that have been _actually required_.\n\nThis means that you don't have to configure any include- or exclude rules.\nIf you modify a JS file that is solely used on the client-side but never run on\nthe server, __node-dev will know__ this and won't restart the process.\n\nThis also means that you __don't have to__ configure any file extensions. Just\nrequire a `.json` file or a `.coffee` script for example and it will be watched.\nAutomatically.\n\nNode-dev uses [filewatcher](https://www.npmjs.org/package/filewatcher) under\nthe hood and hence will take advantage of the native `fs.watch()` API if it\nis available on your system.\n\n\n# Usage\n\nJust run `node-dev` as you would normally run `node`:\n\n```\nnode-dev foo.js\n```\n\nThere are two command line options that can be used to control how many files\nare watched:\n\n* `--no-deps` Watch only the project's own files and linked modules (via `npm link`)\n* `--all-deps` Watch the whole dependency tree\n\nBy default node-dev will watch all first-level dependencies, i.e. the ones in\nthe project's `node_modules`folder.\n\n\n# Installation\n\nNode-dev can be installed via npm. Make sure to use the `-g` option to install\nit globally.\n\n    npm install -g node-dev\n\n### Desktop Notifications\n\nStatus and error messages can be displayed as desktop notification using either\n[Growl](http://growl.info/about.php) or\n[libnotify](http://developer.gnome.org/libnotify/).\n\n![Screenshot](http://fgnass.github.com/images/node-dev.png)\n\n![Screenshot](http://fgnass.github.com/images/node-dev-linux.png)\n\n\nIn order to use Growl notifications\n[growlnotify](http://growl.info/extras.php#growlnotify) must be installed on\nyour system.\n\nTo use OSX's built in notifications:\n\n    sudo gem install terminal-notifier\n\n# Settings\n\nUsually node-dev doesn't require any configuration at all, but there are some\noptions you can set to tweak its behaviour:\n\n* `clear` – Whether to clear the screen upon restarts. _Default:_ `false`\n* `notify` – Whether to display desktop notifications. _Default:_ `true`\n* `timestamp` – The timestamp format to use for logging restarts. _Default:_ `\"HH:MM:ss\"`\n* `vm` – Whether to watch files loaded via Node's [VM](http://nodejs.org/docs/latest/api/vm.html) module. _Default:_ `true`\n* `fork` – Whether to hook into [child_process.fork](http://nodejs.org/docs/latest/api/child_process.html#child_process_child_process_fork_modulepath_args_options) (required for [clustered](http://nodejs.org/docs/latest/api/cluster.html) programs). _Default:_ `true`\n* `deps` - How many levels of dependencies should be watched. _Default:_ `1`\n\nUpon startup node-dev looks for a `.node-dev.json` file in the user's HOME\ndirectory. It will also look for a `.node-dev.json` file in the current\ndirectory which (if present) overwrites the per-user settings.\n\n### Transpilers\n\nYou can also use node-dev to run transpiled languages. You can either use a\n.js file as entry point to your application that registers your transpiler as\nrequire-extension manually, for example by calling `CoffeeScript.register()` or\nyou can let node-dev do this for you.\n\nThere is a config option called `extensions` which maps file extensions to\ncompiler module names. By default this map looks like this:\n\n```json\n    {\n        \"coffee\": \"coffee-script/register\",\n        \"ls\": \"LiveScript\"\n    }\n```\n\nThis means that if you run `node-dev foo.coffee` node-dev will do a\n`require(\"coffee-script/register\")` before running your script.\n\n__Note:__ If you want to use coffee-script < 1.7 you have to change the\nsetting to `{\"coffee\": \"coffee-script\"}`.\n\n### Graceful restarts\n\nNode-dev sends a `SIGTERM` signal to the child-process if a restart is required.\nIf your app is not listening for these signals `process.exit(0)` will be called\nimmediately. If a listener is registered, node-dev assumes that your app will\nexit on its own once it is ready.\n\n## License\n\n### The MIT License (MIT)\n\nCopyright (c) 2014 Felix Gnass\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/fgnass/node-dev/issues"
  },
  "homepage": "https://github.com/fgnass/node-dev",
  "_id": "node-dev@2.3.0",
  "dist": {
    "shasum": "ebe5f8c598537494b22a9dba158e2288ab332173"
  },
  "_from": "node-dev@",
  "_resolved": "https://registry.npmjs.org/node-dev/-/node-dev-2.3.0.tgz"
}
